<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<configSections>
		<section name="TcmCDService" type="TcmCDService.Configuration.Config, TcmCDService.Common" />
	</configSections>
	<!-- defaultCacheExpiry is the number of minutes cache items expire when no cache events are processed -->
	<TcmCDService defaultCacheExpiry="5" tridionHome="D:\Workspace\Code\Tridion" tridionConfiguration="D:\Workspace\Code\Tridion\config\development">
		<!-- NullCache does not cache any items retrieved from Tridion Content Delivery -->
		<cacheType type="TcmCDService.CacheTypes.NullCache, TcmCDService.Common" />
		
		<!-- AbsoluteCache caches items with a absolute expiration of "defaultCacheExpiry" -->
		<!--
		<cacheType type="TcmCDService.CacheTypes.AbsoluteCache, TcmCDService.Common" />
		-->
		
		<!-- RMICache caches items until a cache flush instruction is received from Tridion over RMI.
		     If the Tridion cache channel service is not connected, absolute expiration according to "defaultCacheExpiry" applies. -->

		<!--
		<cacheType type="TcmCDService.CacheTypes.RMICache, TcmCDService.RMI">
			<setting key="host">10.38.230.11</setting>
			<setting key="port">1099</setting>
			<setting key="instanceIdentifier"></setting>
		</cacheType>
		-->
		<!--
		<cacheType type="TcmCDService.CacheTypes.RMICache, TcmCDService.NativeRMI">
			<setting key="host">10.38.230.11</setting>
			<setting key="port">1099</setting>
			<setting key="instanceIdentifier"></setting>
		</cacheType>		
		-->
		<!-- ActiveMQCache caches items until a cache flush instruction is received from Tridion over Apache ActiveMQ.
				 Note that this requires configuring the com.tridion.tcmcdservice.jms.JMSXMLCacheConnector on the Tridion Java side.	-->
		<!--
		<cacheType type="TcmCDService.CacheTypes.ActiveMQCache, TcmCDService.ActiveMQ">
			<setting key="brokerUrl">activemq:tcp://10.20.146.226:61616</setting>
			<setting key="topic">TridionCCS</setting>
			<setting key="username"></setting>
			<setting key="password"></setting>
		</cacheType>
		-->
			
		<!-- ZeroMQCache caches items until a cache flush instruction is received from Tridion over ZeroMQ. 
				 Note that this requires configuring the com.tridion.tcmcdservice.ZeroMQCacheConnector on the Tridion Java side. 
		-->
		<!--
		<cacheType type="TcmCDService.CacheTypes.ZeroMQCache, TcmCDService.ZeroMQ">
			<setting key="subscriptionUri">tcp://10.38.230.11:5556</setting>
			<setting key="submissionUri">tcp://10.38.230.11:5557</setting>
			<setting key="topic">Tridion</setting>
		</cacheType>
		-->
		<!-- ZeroMQBroker caches items until a cache flush instruction is received from Tridion over ZeroMQ. 
				 Note that this requires configuring the com.tridion.tcmcdservice.ZeroMQCacheConnector on the Tridion Java side. 
				 Also TcmCDService will act as the message broker for all configured Tridion ZeroMQ clients -->
		<!--
		<cacheType type="TcmCDService.CacheTypes.ZeroMQBroker, TcmCDService.ZeroMQ">
			<setting key="subscriptionUri">tcp://*:5556</setting>
			<setting key="submissionUri">tcp://*:5557</setting>
			<setting key="topic">Tridion</setting>
		</cacheType>	
		-->
	</TcmCDService>
	<system.serviceModel>
		<bindings>
			<customBinding>
				<binding name="basicHttp">
					<textMessageEncoding messageVersion="Soap11" />
					<httpTransport hostNameComparisonMode="Exact" maxBufferSize="262144" maxReceivedMessageSize="262144" maxBufferPoolSize="262144" decompressionEnabled="true" keepAliveEnabled="true" />
				</binding>
				<binding name="wsHttp">
					<textMessageEncoding />
					<httpTransport hostNameComparisonMode="Exact" maxBufferSize="262144" maxReceivedMessageSize="262144" maxBufferPoolSize="262144" decompressionEnabled="true" keepAliveEnabled="true" />
				</binding>
				<binding name="netTcp">
					<binaryMessageEncoding />
					<tcpTransport hostNameComparisonMode="Exact" maxBufferSize="262144" maxReceivedMessageSize="262144" maxBufferPoolSize="262144" />
				</binding>
				<binding name="netNamedPipe">
					<binaryMessageEncoding />
					<namedPipeTransport hostNameComparisonMode="Exact" maxBufferSize="262144" maxReceivedMessageSize="262144" maxBufferPoolSize="262144" />
				</binding>
			</customBinding>
		</bindings>
		<behaviors>
			<serviceBehaviors>
				<behavior name="TcmCDServiceBehavior">
					<serviceDebug httpHelpPageEnabled="false" httpsHelpPageEnabled="false" includeExceptionDetailInFaults="true" />
					<serviceMetadata httpGetEnabled="false" httpsGetEnabled="false" />
					<serviceThrottling maxConcurrentCalls="256" maxConcurrentInstances="256" maxConcurrentSessions="256" />
			
					<!--
					<serviceMetadata httpGetEnabled="true"/>
					-->
				</behavior>
			</serviceBehaviors>
		</behaviors>
		<services>
			<service name="TcmCDService.Service" behaviorConfiguration="TcmCDServiceBehavior">
				<clear />
				<endpoint bindingNamespace="" binding="customBinding" contract="TcmCDService.Contracts.IService" address="TcmCDService/basic" bindingConfiguration="basicHttp"  />
				<endpoint bindingNamespace="" binding="customBinding" contract="TcmCDService.Contracts.IService" address="TcmCDService" bindingConfiguration="wsHttp"  />
				<endpoint bindingNamespace="" binding="customBinding" contract="TcmCDService.Contracts.IService" address="TcmCDService" bindingConfiguration="netTcp"  />
				<endpoint bindingNamespace="" binding="customBinding" contract="TcmCDService.Contracts.IService" address="TcmCDService" bindingConfiguration="netNamedPipe"  />

				<host>
					<baseAddresses>
						<add baseAddress="http://localhost:12001" />
						<add baseAddress="net.tcp://localhost:12002" />
						<add baseAddress="net.pipe://localhost" />
					</baseAddresses>
				</host>
			</service>
		</services>
	</system.serviceModel>
	<system.diagnostics>
		<sources>
			<!-- 
				Control log level by setting the switchValue to:
				- Verbose
				- Information
				- Warning
				- Error
			-->
			<source name="TcmCDService" switchValue="Verbose">
				<listeners>
					<remove name="Default"/>
					<add name="FileLogListener" type="TcmCDService.Logging.RolloverTraceListener, TcmCDService.Common" initializeData="F:\temp\TcmCDService.log" />
				</listeners>
			</source>
		</sources>
		<trace autoflush="true" indentsize="2" />
	</system.diagnostics>
</configuration>